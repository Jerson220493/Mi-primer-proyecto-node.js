* Node es un entorno de ejecucion orientado a eventos asincronos, codigo de es6+
* Npm es el gestor de paquetes
* Express en un framework para node js que no tiene tantas dependencias como por ejemplo laravel o dijango dejando a libertad del la persona que utiliza instalar las depencias necesarias ¿ que incluye ?
    -> Routes -> rutas que redireccionan 
    -> Manejo de errores
    -> middleware
    -> soporta los diferentes metodos http

¿ Como inicializar node ? 
npm init -> con este codigo se crea el package json

¿ Dependencias ? 
existen dos tipos dependencias de produccion y dependencias de desarrollo 

npm -> es el gestor de paquetes de node, se pueden ver los paquetes en la pagina web 
    npm i _nombre del paquete  // para instalar
    npm i -D nombre del paquete // cuando la dependencia es de desarrollo 

**************** DEPENDENCIAS ***********************
express -> crea el servidor 
Nodemon -> refresca el servidor local cuando hacemos cambios dependencia de desarrollo

**************** IMPORTACION DE DEPENDENCIAS ****************
const express = require('express')  // esta es la manera anterior commonjs
import express from 'express'  // esta la manera moderna de importar las dependencias con la notacion ems6

**************** ROUTIN *****************************
donde van a transitar los usuarios los endpoints, un sitio web tiene muchas rutas
    GET -> mostrar informacion 
    POST -> enviar informacion 
    PUT -> actualizar informacion 
    DELETE -> eliminar informacion 

*************** TEMPLATE ENGINE ************************
Motor de plantilla son tecnologias que nos permiten crear el codigo HTML y mostrar informacion contenida en variables de una forma mas completa y clara consume mas recurso del servidor, ya que todo el codigo html se estara renderizando desde el servidor, mientras que las nuevas tecnologias como react o view lo hacen directamente desde el cliente, navegador 
    para el primer proyecto vamos a trabajar con pug __ npm i pug __ 


Aplicaciones moloniticas -> proyectos pequeños 
APIS -> nuevos proyectos

MVC -> model view controller

tailwind css 
instalacion 
npm i -D tailwindcss autoprefixer postcss postcss-cli
revisar muy bien que queden bien instaladas en el package 
en el index marcar la carpeta publica donde creamos la carpeta css
en la carpeta css crear el archivo tailwind.css y colocar sus tres directivas
ejecutar npx tailwindcss init -p
    con esto creamos dos packages mirar el de tailwind css en content colcoar las vistas donde esta el HTML
    con esto escaneamos todos los archivos para compilar el archivo css
    despues en package principal agregamos un scrip nuevo 
        "css" : "postcss public/css/tailwind.css -o public/css/app.css --watch"
    en los archivos pug se debe agregar los layouts con la referencia a la hoja de estilos app.css

/********************************* TAILWIND ***************************************
al ejecutarse el codigo en linea solo afecta al momento de ejecutar la clase de este archivo 
CLASES
    block -> display block
    text-sm -> texto pequeños
    uppercase -> mayuscula
    text-gray-500 -> color del texto el numero define la opacidad
    mb-3 -> margin bot de 3 px
    font-bold -> negrita
    w-full -> with todo el ancho


pug 
    py pading
    my margin

ORM  object Relational mapping
    los datos de una base de dato son tratados como objetos
    node 
        prisma
        sequelize
        mongoose
        type ORM
        bookshlef
    instalar un ORM
         npm i sequelize mysql2

en la carpeta config esta la configuracion a la conexion a la base de datos
SHOW VARIABLES LIKE 'port'; // para validar el puerto que esta el servidor mysql 

/********************** variables de entorno ***********************
entorno de momento de desarrollo pero una vez subido esas variables cambian
npm i dotenv

express validator dependencia para validar los datos del formulario
npm i express-validator

hashear el password es encriptarlo eso lo hacemos en el modelo dependencia bycript
npm i bcrypt

/************************ emails ********************************
nodemailer
mailtrap{
    las variables de conexion despues de registrar estan en el .env
}

/*********************** proteccion contra csrf
npm i csurf cookie-parser